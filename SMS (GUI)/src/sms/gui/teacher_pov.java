/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sms.gui;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Ace
 */
public class teacher_pov extends javax.swing.JFrame {

    /*
     * Creates new form teacher_pov
     */
    public teacher_pov() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tab = new javax.swing.JPanel();
        home = new javax.swing.JPanel();
        course_management = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        student_course_table = new javax.swing.JTable();
        student_id_search = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        course_table = new javax.swing.JTable();
        add_course = new javax.swing.JButton();
        remove_course = new javax.swing.JButton();
        searchCourse_button = new javax.swing.JButton();
        course_id_textfield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        course_textfield = new javax.swing.JTextField();
        update_Course = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        student_id_textfield = new javax.swing.JTextField();
        courses_combobox = new javax.swing.JComboBox<>();
        upload_course = new javax.swing.JButton();
        search_student = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        last_name_label = new javax.swing.JLabel();
        first_name_label = new javax.swing.JLabel();
        search_student_information = new javax.swing.JButton();
        course_information = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        course_schedule = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        subject_combobox = new javax.swing.JComboBox<>();
        schedule_row_combobox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        time_textfield = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        day_combobox = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        pick_course_combobox = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        subject_name_textfield = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        course_subject_table = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        upload_subject_button = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        subject_id_textfield = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        instructor_textfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        course_name = new javax.swing.JLabel();
        grade = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        attendance = new javax.swing.JPanel();
        student_information = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        courseManagement_button = new javax.swing.JButton();
        grades_button = new javax.swing.JButton();
        attendance_button = new javax.swing.JButton();
        student_info_button = new javax.swing.JButton();
        home_button = new javax.swing.JButton();
        course_info_button = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        notification_button = new javax.swing.JButton();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        message_button = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        notification_panel = new javax.swing.JDesktopPane();
        message_panel = new javax.swing.JDesktopPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 51, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 300));

        jPanel4.setBackground(new java.awt.Color(51, 102, 0));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Student Management System");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        tab.setBackground(new java.awt.Color(204, 204, 204));
        tab.setPreferredSize(new java.awt.Dimension(700, 550));
        tab.setLayout(new java.awt.CardLayout());

        home.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 841, Short.MAX_VALUE)
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        tab.add(home, "card3");

        course_management.setBackground(new java.awt.Color(204, 204, 204));

        student_course_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student ID", "Last Name", "First Name", "Course/s"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(student_course_table);
        if (student_course_table.getColumnModel().getColumnCount() > 0) {
            student_course_table.getColumnModel().getColumn(0).setResizable(false);
            student_course_table.getColumnModel().getColumn(0).setPreferredWidth(100);
            student_course_table.getColumnModel().getColumn(1).setResizable(false);
            student_course_table.getColumnModel().getColumn(1).setPreferredWidth(140);
            student_course_table.getColumnModel().getColumn(2).setResizable(false);
            student_course_table.getColumnModel().getColumn(2).setPreferredWidth(180);
            student_course_table.getColumnModel().getColumn(3).setResizable(false);
            student_course_table.getColumnModel().getColumn(3).setPreferredWidth(600);
        }

        student_id_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_id_searchActionPerformed(evt);
            }
        });

        jLabel11.setText("Student ID:");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel9.setText("Add Courses");

        course_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(course_table);
        if (course_table.getColumnModel().getColumnCount() > 0) {
            course_table.getColumnModel().getColumn(1).setResizable(false);
            course_table.getColumnModel().getColumn(1).setPreferredWidth(330);
        }

        add_course.setText("Add a Course");
        add_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_courseActionPerformed(evt);
            }
        });

        remove_course.setText("Remove a Course");
        remove_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_courseActionPerformed(evt);
            }
        });

        searchCourse_button.setText("Search");
        searchCourse_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCourse_buttonActionPerformed(evt);
            }
        });

        course_id_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course_id_textfieldActionPerformed(evt);
            }
        });

        jLabel12.setText("Course ID:");

        jLabel13.setText("Course Name:");

        update_Course.setText("Update");
        update_Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_CourseActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(course_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(course_textfield))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(add_course, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remove_course, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchCourse_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(update_Course))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(67, 67, 67)
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(course_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(course_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_course)
                    .addComponent(remove_course)
                    .addComponent(searchCourse_button)
                    .addComponent(update_Course))
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setText("Course to Student");

        jLabel8.setText("Student ID:");

        jLabel10.setText("Course:");

        student_id_textfield.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        courses_combobox.setMaximumRowCount(20);
        courses_combobox.setToolTipText("");
        courses_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courses_comboboxActionPerformed(evt);
            }
        });

        upload_course.setText("Update");
        upload_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upload_courseActionPerformed(evt);
            }
        });

        search_student.setText("Search");
        search_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_studentActionPerformed(evt);
            }
        });

        jLabel14.setText("Last Name:");

        jLabel15.setText("First Name:");

        last_name_label.setForeground(new java.awt.Color(0, 102, 102));
        last_name_label.setText("Rosialdia");

        first_name_label.setForeground(new java.awt.Color(0, 102, 102));
        first_name_label.setText("Daniel Albert");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(last_name_label)
                                    .addComponent(first_name_label)))
                            .addComponent(jLabel1)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(student_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search_student, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courses_combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(upload_course, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(68, Short.MAX_VALUE))))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(student_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(search_student))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(last_name_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(first_name_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courses_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(26, 26, 26)
                .addComponent(upload_course)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        search_student_information.setText("Search");
        search_student_information.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_student_informationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout course_managementLayout = new javax.swing.GroupLayout(course_management);
        course_management.setLayout(course_managementLayout);
        course_managementLayout.setHorizontalGroup(
            course_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(course_managementLayout.createSequentialGroup()
                .addGroup(course_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(course_managementLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(course_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(course_managementLayout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(course_managementLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(student_id_search, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_student_information)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        course_managementLayout.setVerticalGroup(
            course_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(course_managementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(course_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(course_managementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(student_id_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(search_student_information))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab.add(course_management, "card2");

        course_information.setBackground(new java.awt.Color(204, 204, 204));

        course_schedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null, null, null, null, null, null, null},
                {"2", null, null, null, null, null, null, null},
                {"3", null, null, null, null, null, null, null},
                {"4", null, null, null, null, null, null, null},
                {"5", null, null, null, null, null, null, null},
                {"6", null, null, null, null, null, null, null},
                {"7", null, null, null, null, null, null, null},
                {"8", null, null, null, null, null, null, null},
                {"9", null, null, null, null, null, null, null}
            },
            new String [] {
                "Row", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(course_schedule);
        if (course_schedule.getColumnModel().getColumnCount() > 0) {
            course_schedule.getColumnModel().getColumn(0).setResizable(false);
            course_schedule.getColumnModel().getColumn(0).setPreferredWidth(10);
            course_schedule.getColumnModel().getColumn(1).setResizable(false);
            course_schedule.getColumnModel().getColumn(2).setResizable(false);
            course_schedule.getColumnModel().getColumn(3).setResizable(false);
            course_schedule.getColumnModel().getColumn(4).setResizable(false);
            course_schedule.getColumnModel().getColumn(5).setResizable(false);
            course_schedule.getColumnModel().getColumn(6).setResizable(false);
            course_schedule.getColumnModel().getColumn(7).setResizable(false);
        }

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        subject_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        schedule_row_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        jLabel20.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Add Schedule to Subject");

        jLabel21.setText("Subject");

        jLabel22.setText("Assigned Day");

        jLabel23.setText("Tme:");

        jButton7.setText("Add Schedule");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        day_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        jButton3.setText("Remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel29.setText("Row:");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subject_combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(day_combobox, 0, 102, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel29)
                        .addGap(4, 4, 4)
                        .addComponent(schedule_row_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(time_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addGap(1, 1, 1)
                .addComponent(subject_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schedule_row_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(time_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 106, Short.MAX_VALUE)
        );

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jButton10.setText("Upload");

        jLabel27.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel27.setText("Course Prerequisites Statements");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField8))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField5)
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel17Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel27)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addGap(14, 14, 14)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        pick_course_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel16.setText("Pick a Course:");

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Subject Name:");

        course_subject_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Subject ID", "Subject", "Instructor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(course_subject_table);
        if (course_subject_table.getColumnModel().getColumnCount() > 0) {
            course_subject_table.getColumnModel().getColumn(0).setResizable(false);
            course_subject_table.getColumnModel().getColumn(0).setPreferredWidth(30);
            course_subject_table.getColumnModel().getColumn(1).setResizable(false);
            course_subject_table.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton5.setText("Remove");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        upload_subject_button.setText("Upload");
        upload_subject_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upload_subject_buttonActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel19.setText("Create Subjects");

        jLabel18.setText("Subject ID:");

        jLabel24.setText("Instructor:");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pick_course_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(upload_subject_button, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel19)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subject_name_textfield)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(subject_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(instructor_textfield))))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(pick_course_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject_name_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(subject_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(instructor_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(upload_subject_button, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Course's Schedule:");

        course_name.setText("Course");

        javax.swing.GroupLayout course_informationLayout = new javax.swing.GroupLayout(course_information);
        course_information.setLayout(course_informationLayout);
        course_informationLayout.setHorizontalGroup(
            course_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(course_informationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(course_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
                    .addGroup(course_informationLayout.createSequentialGroup()
                        .addGroup(course_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(course_informationLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(course_name)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        course_informationLayout.setVerticalGroup(
            course_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, course_informationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(course_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(course_informationLayout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(course_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(course_name)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab.add(course_information, "card7");

        jLabel3.setText("jLabel3");

        javax.swing.GroupLayout gradeLayout = new javax.swing.GroupLayout(grade);
        grade.setLayout(gradeLayout);
        gradeLayout.setHorizontalGroup(
            gradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradeLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel3)
                .addContainerGap(640, Short.MAX_VALUE))
        );
        gradeLayout.setVerticalGroup(
            gradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradeLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jLabel3)
                .addContainerGap(427, Short.MAX_VALUE))
        );

        tab.add(grade, "card4");

        attendance.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout attendanceLayout = new javax.swing.GroupLayout(attendance);
        attendance.setLayout(attendanceLayout);
        attendanceLayout.setHorizontalGroup(
            attendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 841, Short.MAX_VALUE)
        );
        attendanceLayout.setVerticalGroup(
            attendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        tab.add(attendance, "card5");

        javax.swing.GroupLayout student_informationLayout = new javax.swing.GroupLayout(student_information);
        student_information.setLayout(student_informationLayout);
        student_informationLayout.setHorizontalGroup(
            student_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 841, Short.MAX_VALUE)
        );
        student_informationLayout.setVerticalGroup(
            student_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        tab.add(student_information, "card6");

        jPanel12.setBackground(new java.awt.Color(0, 51, 0));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Account Username");

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Welcome!");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Account Type");

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 0), 4));

        courseManagement_button.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        courseManagement_button.setText("Course Management");
        courseManagement_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        courseManagement_button.setBorderPainted(false);
        courseManagement_button.setContentAreaFilled(false);
        courseManagement_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseManagement_buttonActionPerformed(evt);
            }
        });

        grades_button.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        grades_button.setText("Grades");
        grades_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grades_button.setBorderPainted(false);
        grades_button.setContentAreaFilled(false);
        grades_button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        grades_button.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        grades_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grades_buttonActionPerformed(evt);
            }
        });

        attendance_button.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        attendance_button.setText("Attendance");
        attendance_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        attendance_button.setBorderPainted(false);
        attendance_button.setContentAreaFilled(false);
        attendance_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendance_buttonActionPerformed(evt);
            }
        });

        student_info_button.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        student_info_button.setText("Student's Information");
        student_info_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        student_info_button.setBorderPainted(false);
        student_info_button.setContentAreaFilled(false);
        student_info_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_info_buttonActionPerformed(evt);
            }
        });

        home_button.setBackground(new java.awt.Color(51, 102, 0));
        home_button.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        home_button.setText("Home");
        home_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        home_button.setBorderPainted(false);
        home_button.setContentAreaFilled(false);
        home_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_buttonActionPerformed(evt);
            }
        });

        course_info_button.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        course_info_button.setText("Course Information");
        course_info_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        course_info_button.setBorderPainted(false);
        course_info_button.setContentAreaFilled(false);
        course_info_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course_info_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(home_button)
                    .addComponent(courseManagement_button)
                    .addComponent(attendance_button)
                    .addComponent(student_info_button)
                    .addComponent(grades_button)
                    .addComponent(course_info_button))
                .addGap(19, 19, 19))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(home_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courseManagement_button)
                .addGap(5, 5, 5)
                .addComponent(course_info_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grades_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attendance_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(student_info_button)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(39, 89, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 182, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(27, 76, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(15, 63, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 77, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(27, 76, 0));

        jButton9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Log Out");
        jButton9.setBorderPainted(false);
        jButton9.setContentAreaFilled(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton9)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        notification_button.setForeground(new java.awt.Color(255, 255, 255));
        notification_button.setText("Notification");
        notification_button.setBorderPainted(false);
        notification_button.setContentAreaFilled(false);

        jDesktopPane1.setLayer(notification_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notification_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notification_button, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        message_button.setForeground(new java.awt.Color(255, 255, 255));
        message_button.setText(" Message");
        message_button.setBorderPainted(false);
        message_button.setContentAreaFilled(false);

        jDesktopPane2.setLayer(message_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(message_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(message_button, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout notification_panelLayout = new javax.swing.GroupLayout(notification_panel);
        notification_panel.setLayout(notification_panelLayout);
        notification_panelLayout.setHorizontalGroup(
            notification_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 215, Short.MAX_VALUE)
        );
        notification_panelLayout.setVerticalGroup(
            notification_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 213, Short.MAX_VALUE)
        );

        jPanel11.add(notification_panel, "card2");

        javax.swing.GroupLayout message_panelLayout = new javax.swing.GroupLayout(message_panel);
        message_panel.setLayout(message_panelLayout);
        message_panelLayout.setHorizontalGroup(
            message_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 215, Short.MAX_VALUE)
        );
        message_panelLayout.setVerticalGroup(
            message_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 213, Short.MAX_VALUE)
        );

        jPanel11.add(message_panel, "card3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jDesktopPane2))
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDesktopPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void home_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_buttonActionPerformed
        home_button.setForeground(Color.BLUE);
        courseManagement_button.setForeground(Color.BLACK);
        course_info_button.setForeground(Color.BLACK);
        grades_button.setForeground(Color.BLACK);
        attendance_button.setForeground(Color.BLACK);
        student_info_button.setForeground(Color.BLACK);
        
home.setVisible(true);
course_management.setVisible(false);
course_information.setVisible(false);
grade.setVisible(false);
attendance.setVisible(false);
student_information.setVisible(false);
       
      
        
        
    }//GEN-LAST:event_home_buttonActionPerformed

    private void courseManagement_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseManagement_buttonActionPerformed
        home_button.setForeground(Color.BLACK);
        courseManagement_button.setForeground(Color.BLUE);
        course_info_button.setForeground(Color.BLACK);
        grades_button.setForeground(Color.BLACK);
        attendance_button.setForeground(Color.BLACK);
        student_info_button.setForeground(Color.BLACK);

home.setVisible(false);
course_management.setVisible(true);
course_information.setVisible(false);
grade.setVisible(false);
attendance.setVisible(false);
student_information.setVisible(false);

        update_CourseTable();
        update_CourseList();
        update_studentCourse_table();
        
    }//GEN-LAST:event_courseManagement_buttonActionPerformed

    private void grades_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grades_buttonActionPerformed
        home_button.setForeground(Color.BLACK);
        courseManagement_button.setForeground(Color.BLACK);
        course_info_button.setForeground(Color.BLACK);
        grades_button.setForeground(Color.BLUE);
        attendance_button.setForeground(Color.BLACK);
        student_info_button.setForeground(Color.BLACK);
        
home.setVisible(false);
course_management.setVisible(false);
course_information.setVisible(false);
grade.setVisible(true);
attendance.setVisible(false);
student_information.setVisible(false);
        
    }//GEN-LAST:event_grades_buttonActionPerformed

    private void attendance_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendance_buttonActionPerformed
        
        home_button.setForeground(Color.BLACK);
        courseManagement_button.setForeground(Color.BLACK);
        course_info_button.setForeground(Color.BLACK);
        grades_button.setForeground(Color.BLACK);
        attendance_button.setForeground(Color.BLUE);
        student_info_button.setForeground(Color.BLACK);
        
home.setVisible(false);
course_management.setVisible(false);
course_information.setVisible(false);
grade.setVisible(false);
attendance.setVisible(true);
student_information.setVisible(false);


    }//GEN-LAST:event_attendance_buttonActionPerformed

    private void student_id_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_id_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_student_id_searchActionPerformed

    private void courses_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courses_comboboxActionPerformed
    
        
    }//GEN-LAST:event_courses_comboboxActionPerformed
    private void update_studentCourse_table(){
        
        DefaultTableModel model = (DefaultTableModel) student_course_table.getModel();
        model.setRowCount(0);
        ResultSet rs;

        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);
            
            
            
        PreparedStatement pst = con.prepareStatement("SELECT student_id, last_name, first_name, course FROM students");
        
        rs = pst.executeQuery();

         while (rs.next()) {
                String student_id = rs.getString("student_id");
                String last_name = rs.getString("last_name");
                String first_name = rs.getString("first_name");
                String course = rs.getString("course");
                model.addRow(new Object[]{student_id, last_name, first_name, course});
            }

        
        } catch(Exception e){
            
        }
        
        
    }
    
    
    
    
    
    
    private void update_subject_table(){

        String course = (String) pick_course_combobox.getSelectedItem();
        subject_combobox.removeAllItems();
        course_name.setText(course);
           
        
        DefaultTableModel model = (DefaultTableModel) course_subject_table.getModel();
        model.setRowCount(0);
        ResultSet rs;
        ResultSet rs2;

        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);
            
            
            
        PreparedStatement pst = con.prepareStatement("SELECT subject_id, subject, instructor FROM "+course+"_subjects");
   

        rs = pst.executeQuery();

         while (rs.next()) {
                
                String subject_id = rs.getString("subject_id");
                String subject = rs.getString("subject");
                String instructor = rs.getString("instructor");
                
                
                model.addRow(new Object[]{subject_id, subject, instructor});
                
                
                
                subject_combobox.addItem(subject);
                
                   
                
                
            }
         
         
         DefaultTableModel model2 = (DefaultTableModel) course_schedule.getModel();
         model2.setRowCount(0);
         PreparedStatement pst2 = con.prepareStatement("SELECT `rows`, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday FROM "+course+"_schedule");
   

         rs2 = pst2.executeQuery();

         while (rs2.next()) {
                
                String rows = rs2.getString("rows");
                String Sunday = rs2.getString("Sunday");
                String Monday = rs2.getString("Monday");
                String Tuesday = rs2.getString("Tuesday");
                String Wednesday = rs2.getString("Wednesday");
                String Thursday = rs2.getString("Thursday");
                String Friday = rs2.getString("Friday");
                String Saturday = rs2.getString("Saturday");
                
                
                model2.addRow(new Object[]{rows, Sunday, Monday , Tuesday, Wednesday, Thursday, Friday, Saturday});
      
                
            }
         
         

        
        } catch(Exception e){
            
        }
        
}
    
    
    private void update_CourseList(){
        courses_combobox.removeAllItems();
        pick_course_combobox.removeAllItems();
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);

        PreparedStatement pst = con.prepareStatement("SELECT course FROM courses");
        ResultSet rs = pst.executeQuery();
             
         while (rs.next()) {
                String course = rs.getString("course");
                courses_combobox.addItem(course);
                pick_course_combobox.addItem(course);
            }
 
        rs.close();
        pst.close();
        con.close();
        } catch(Exception e){
            
        }
    }
    
    private void update_CourseTable(){
        
        DefaultTableModel model = (DefaultTableModel) course_table.getModel();
        model.setRowCount(0);
         ResultSet rs;

        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);
            
            
            
        PreparedStatement pst = con.prepareStatement("SELECT course_id, course FROM courses");
        
        rs = pst.executeQuery();

         while (rs.next()) {
                String course_id = rs.getString("course_id");
                String course = rs.getString("course");
                model.addRow(new Object[]{course_id, course});
            }

        
        } catch(Exception e){
            
        }
        
        
    }
    
    private void add_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_courseActionPerformed
       
        String courseIds = course_id_textfield.getText();
        String course = course_textfield.getText();
        
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
        
        
        Statement stmt = null;
        Statement stmt2 = null;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            Connection con = DriverManager.getConnection(url, us, ps);
            
            
            
            Statement st = con.createStatement();
            PreparedStatement pst = con.prepareStatement("SELECT * FROM courses WHERE course_id=? OR course=?");
            
            
            
            
            pst.setString(1, courseIds);
            pst.setString(2, course);
            
            ResultSet rs = pst.executeQuery();
            
            if ("".equals(courseIds)){
                JOptionPane.showMessageDialog(new JFrame(), "Input Course ID", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else if("".equals(course)){
                JOptionPane.showMessageDialog(new JFrame(), "Input Course Name", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else {
                if (rs.next()){
                    JOptionPane.showMessageDialog(new JFrame(), "Course ID or Course Name already exists", "Dialog", JOptionPane.ERROR_MESSAGE);
                    
                } else {
                
                String query = "INSERT INTO courses (course_id, course) VALUES ('"+courseIds+"','"+course+"')";
                System.out.println("Course ID: " + courseIds + ", Course: " + course);
                st.executeUpdate(query);
                update_CourseTable();
                update_CourseList();
                JOptionPane.showMessageDialog(new JFrame(), "Course Added Succesfully", "Dialog", JOptionPane.INFORMATION_MESSAGE);
                
                
                stmt = con.createStatement();
                String sql = "CREATE TABLE IF NOT EXISTS "+ course +"_schedule (" +
            "`rows` VARCHAR(255), " +  
            "Sunday VARCHAR(255), " + 
            "Monday VARCHAR(255), " + 
            "Tuesday VARCHAR(255), " + 
            "Wednesday VARCHAR(255), " + 
            "Thursday VARCHAR(255), " + 
            "Friday VARCHAR(255), " + 
            "Saturday VARCHAR(255))";  

                 stmt.executeUpdate(sql);
                 
                 Statement st3 = con.createStatement();
                 for (int i = 1; i < 10; i++) {
                 
                 String query2 = "INSERT INTO "+ course +"_schedule (`rows`) VALUES ('" + String.valueOf(i) + "')";
                 st3.executeUpdate(query2); 
                 }

                 

 
                 stmt2 = con.createStatement();
                 String sql2 = "CREATE TABLE IF NOT EXISTS "+ course +"_subjects (" +
             "subject_id VARCHAR(255) UNIQUE, " +           
             "subject VARCHAR(255) ," +
             "instructor VARCHAR(255)) ";

                 stmt2.executeUpdate(sql2);
  
                
                
                
            }
            }
            
            

            
            st.close();
            pst.close();
            rs.close();
            con.close();
            


           } catch(Exception e){
           System.out.println("Error: "+ e.getMessage());
           }


        
        
        
        
        
        
        

        
    }//GEN-LAST:event_add_courseActionPerformed

    private void remove_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_courseActionPerformed
       
        String courseIds = course_id_textfield.getText();
        String course = course_textfield.getText();
        String url = "jdbc:mysql://localhost:3306/sms"; 
        String us = "root";
        String ps = "";
        Statement stmt = null;
        Statement stmt2 = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            

            if ("".equals(courseIds)) {
                JOptionPane.showMessageDialog(new JFrame(), "Input Course ID", "Dialog", JOptionPane.ERROR_MESSAGE);
            } else {
                Connection con = DriverManager.getConnection(url, us, ps);

                PreparedStatement pst2 = con.prepareStatement("SELECT course_id, course FROM courses WHERE course_id = ?");
                pst2.setString(1, courseIds);
                ResultSet rs2 = pst2.executeQuery();
                
                String course2 = null;

                if (rs2.next()) {
                    course2 = rs2.getString("course");
                }

                if (course2 == null) {
                    JOptionPane.showMessageDialog(new JFrame(), "No Course Found with ID: " + courseIds, "Dialog", JOptionPane.ERROR_MESSAGE);
                } else {
                    String input = JOptionPane.showInputDialog("Do you want to delete course: " + course2 + "?: YES/NO");

                    if ("YES".equalsIgnoreCase(input)) {
                        PreparedStatement pst = con.prepareStatement("DELETE FROM courses WHERE course_id = ?");
                        pst.setString(1, courseIds);
                        
                        int rowsDeleted = pst.executeUpdate();

                        if (rowsDeleted > 0) {
                            JOptionPane.showMessageDialog(new JFrame(), "Course: " + course2 + " was deleted successfully", "Dialog", JOptionPane.INFORMATION_MESSAGE);
                            update_CourseTable();
                            update_CourseList();
                            
// remove table
     
  
            stmt = con.createStatement();
            String tableName = course2 + "_schedule"; 
            String sql = "DROP TABLE IF EXISTS " + tableName;
            stmt.executeUpdate(sql);
            

        
        ////////////////////////////////

            stmt2 = con.createStatement();
            tableName = course2 + "_subjects"; 
            String sql2 = "DROP TABLE IF EXISTS " + tableName;
            stmt.executeUpdate(sql2);
            

                                  
                            
        
        
                            
                            
                            
                            
                        } else {
                            JOptionPane.showMessageDialog(new JFrame(), "Failed to delete course with ID: " + courseIds, "Dialog", JOptionPane.ERROR_MESSAGE);
                        }

                        pst.close();
                    }
                }

                rs2.close();
                pst2.close();
                con.close();
                stmt.close();
                stmt2.close();
            }
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }

        
        
        
        
     
        
        
    }//GEN-LAST:event_remove_courseActionPerformed

    private void course_id_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course_id_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_course_id_textfieldActionPerformed

    private void searchCourse_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCourse_buttonActionPerformed
       
        String course_id = course_id_textfield.getText();
        int check = 0;
        
        ResultSet rs;

        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);
            
         if ("".equals(course_id)){
             JOptionPane.showMessageDialog(new JFrame(), "Input Course ID", "Dialog", JOptionPane.ERROR_MESSAGE);
         } else{
             PreparedStatement pst = con.prepareStatement("SELECT course_id, course FROM courses");
        
             rs = pst.executeQuery();
             
             while (rs.next()) {
                 if (rs.getString("course_id").equals(course_id)){
                    String course = rs.getString("course");
                    course_textfield.setText(course);

                    DefaultTableModel model = (DefaultTableModel) course_table.getModel();
                    model.setRowCount(0);
                    model.addRow(new Object[]{course_id, course});
                    check++;

                 }
            }
             if(check < 1){
             JOptionPane.showMessageDialog(new JFrame(), "Course Does not Exist", "Dialog", JOptionPane.ERROR_MESSAGE);
         }
  
         }
         

        } catch(Exception e){
            
        }
        
        
        
    }//GEN-LAST:event_searchCourse_buttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        update_CourseTable();
        update_CourseList();
        update_studentCourse_table();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void update_CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_CourseActionPerformed
        String course_id = course_id_textfield.getText();
        String course = course_textfield.getText();
       
        
      

        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);
        PreparedStatement pst = con.prepareStatement("UPDATE courses SET course=? WHERE course_id=?");; 
        ResultSet rs;
        int check = 0;
        
        
         if ("".equals(course_id)){
             JOptionPane.showMessageDialog(new JFrame(), "Input Course ID to Update Course Name", "Dialog", JOptionPane.ERROR_MESSAGE);
         } else if ("".equals(course)){
             JOptionPane.showMessageDialog(new JFrame(), "Input New Course Name", "Dialog", JOptionPane.ERROR_MESSAGE);
         }
             else{
             
             
                PreparedStatement pst2 = con.prepareStatement("SELECT course_id, course FROM courses");
        
                rs = pst2.executeQuery();
             
                 while (rs.next()) {
                    if (rs.getString("course_id").equals(course_id)){

                     check++;
                     pst.setString(1, course); 
                     pst.setString(2, course_id);  

                     pst.executeUpdate();
                     JOptionPane.showMessageDialog(new JFrame(), "Succesfully Updated Course Name to "+course, "Dialog", JOptionPane.INFORMATION_MESSAGE);
                     update_CourseTable();
                     update_CourseList();

                 }
                }
             if(check < 1){
             JOptionPane.showMessageDialog(new JFrame(), "Course Does not Exist", "Dialog", JOptionPane.ERROR_MESSAGE);
               }

  
              
         }
         pst.close();
         con.close();

        } catch(Exception e){
            
        }        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_update_CourseActionPerformed

    private void upload_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upload_courseActionPerformed
       String sid = student_id_textfield.getText();
String chosen_course = (String) courses_combobox.getSelectedItem();

try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    String url = "jdbc:mysql://localhost:3306/sms";
    String us = "root";
    String ps = "";

    Connection con = DriverManager.getConnection(url, us, ps);
    ResultSet rs = null;
    PreparedStatement pst = null;

    if ("".equals(sid)) {
        JOptionPane.showMessageDialog(new JFrame(), "Input Student's ID", "Dialog", JOptionPane.ERROR_MESSAGE);
    } else if ("".equals(chosen_course)) {
        JOptionPane.showMessageDialog(new JFrame(), "Select Course", "Dialog", JOptionPane.ERROR_MESSAGE);
    } else {
        pst = con.prepareStatement("SELECT course_id FROM courses WHERE course = ?");
        pst.setString(1, chosen_course);

        rs = pst.executeQuery();

        if (rs.next()) {
            String course_id = rs.getString("course_id");

            pst = con.prepareStatement("UPDATE students SET course_id=?, course=? WHERE student_id=?");
            pst.setString(1, course_id);
            pst.setString(2, chosen_course);
            pst.setString(3, sid);

            int rowsUpdated = pst.executeUpdate();
            update_studentCourse_table();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(new JFrame(), "Course updated successfully for student ID: " + sid, "Dialog", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Failed to update course for student ID: " + sid, "Dialog", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Course does not exist", "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }

    if (rs != null) rs.close();
    if (pst != null) pst.close();
    con.close();

} catch (Exception e) {
    e.printStackTrace();
}


        
        
        
       
        
        
        
        
    }//GEN-LAST:event_upload_courseActionPerformed

    private void search_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_studentActionPerformed
        
       String sid = student_id_textfield.getText();
        
     
        int check = 0;
        
        ResultSet rs;

        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);
            
         if ("".equals(sid)){
             JOptionPane.showMessageDialog(new JFrame(), "Input Student's ID", "Dialog", JOptionPane.ERROR_MESSAGE);
         } else{
             PreparedStatement pst = con.prepareStatement("SELECT student_id, last_name, first_name, course FROM students");
        
             rs = pst.executeQuery();
             
             while (rs.next()) {
                 if (rs.getString("student_id").equals(sid)){
                     
                     
                    DefaultTableModel model = (DefaultTableModel) student_course_table.getModel();
                    model.setRowCount(0);
                    String student_id = rs.getString("student_id");
                    String last_name = rs.getString("last_name");
                    String first_name = rs.getString("first_name");
                    String course = rs.getString("course");
                    last_name_label.setText(last_name);
                    first_name_label.setText(first_name);
                    model.addRow(new Object[]{student_id, last_name, first_name, course});
                    check++;

                 }
            }
             if(check < 1){
             JOptionPane.showMessageDialog(new JFrame(), "Student Does not Exist", "Dialog", JOptionPane.ERROR_MESSAGE);
         }
  
         }
         

        } catch(Exception e){
            
        }
       
       
    }//GEN-LAST:event_search_studentActionPerformed

    private void search_student_informationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_student_informationActionPerformed
       String sid = student_id_search.getText();
        
     
        int check = 0;
        
        ResultSet rs;

        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:MySQL://localhost:3306/sms";
        String us = "root";
        String ps = "";
            
        Connection con = DriverManager.getConnection(url, us, ps);
            
         if ("".equals(sid)){
             JOptionPane.showMessageDialog(new JFrame(), "Input Student's ID", "Dialog", JOptionPane.ERROR_MESSAGE);
         } else{
             PreparedStatement pst = con.prepareStatement("SELECT student_id, last_name, first_name, course FROM students");
        
             rs = pst.executeQuery();
             
             while (rs.next()) {
                 if (rs.getString("student_id").equals(sid)){
                     
                     
                    DefaultTableModel model = (DefaultTableModel) student_course_table.getModel();
                    model.setRowCount(0);
                    String student_id = rs.getString("student_id");
                    String last_name = rs.getString("last_name");
                    String first_name = rs.getString("first_name");
                    String course = rs.getString("course");
                    
                    model.addRow(new Object[]{student_id, last_name, first_name, course});
                    check++;

                 }
            }
             if(check < 1){
             JOptionPane.showMessageDialog(new JFrame(), "Student Does not Exist", "Dialog", JOptionPane.ERROR_MESSAGE);
         }
  
         }
         

        } catch(Exception e){
            
        }
    }//GEN-LAST:event_search_student_informationActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        login lg = new login();
        lg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void course_info_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course_info_buttonActionPerformed
        home_button.setForeground(Color.BLACK);
        courseManagement_button.setForeground(Color.BLACK);
        course_info_button.setForeground(Color.BLUE);
        grades_button.setForeground(Color.BLACK);
        attendance_button.setForeground(Color.BLACK);
        student_info_button.setForeground(Color.BLACK);
        
        
        
home.setVisible(false);
course_management.setVisible(false);
course_information.setVisible(true);
grade.setVisible(false);
attendance.setVisible(false);
student_information.setVisible(false);
        
        
         
        update_CourseList();
        update_subject_table(); 
    }//GEN-LAST:event_course_info_buttonActionPerformed

    private void student_info_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_info_buttonActionPerformed
        
        home_button.setForeground(Color.BLACK);
        courseManagement_button.setForeground(Color.BLACK);
        course_info_button.setForeground(Color.BLACK);
        grades_button.setForeground(Color.BLACK);
        attendance_button.setForeground(Color.BLACK);
        student_info_button.setForeground(Color.BLUE);
        
        
home.setVisible(false);
course_management.setVisible(false);
course_information.setVisible(false);
grade.setVisible(false);
attendance.setVisible(false);
student_information.setVisible(true);


    }//GEN-LAST:event_student_info_buttonActionPerformed

    private void upload_subject_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upload_subject_buttonActionPerformed
        String subject = subject_name_textfield.getText();
        String subject_id = subject_id_textfield.getText();
        String course = (String) pick_course_combobox.getSelectedItem();
        String inst = instructor_textfield.getText();
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/sms";
            String us = "root";
            String ps = "";
            
            Connection con = DriverManager.getConnection(url, us, ps);
            PreparedStatement pst = null;
            if ("".equals(subject_id)){
            JOptionPane.showMessageDialog(new JFrame(), "Input Subject ID", "Dialog", JOptionPane.ERROR_MESSAGE);

            } else if ("".equals(subject)){
            JOptionPane.showMessageDialog(new JFrame(), "Input Subject Name", "Dialog", JOptionPane.ERROR_MESSAGE);

            } else if ("".equals(inst)){
            JOptionPane.showMessageDialog(new JFrame(), "Input Subject Name", "Dialog", JOptionPane.ERROR_MESSAGE);

            } else {
                
                
                   pst = con.prepareStatement("INSERT INTO "+course+"_subjects (subject, subject_id, instructor) VALUES ('"+subject+"', '"+subject_id+"', '"+inst+"' )");

           
                   pst.executeUpdate();
                
                
              update_subject_table();  
                
                
            }
            
           } catch(Exception e){
           System.out.println("Error: "+ e.getMessage());
           JOptionPane.showMessageDialog(new JFrame(), "Subject ID must be Unique", "Dialog", 
                        JOptionPane.ERROR_MESSAGE);
           }
    }//GEN-LAST:event_upload_subject_buttonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       update_subject_table();  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
String subject_id = subject_id_textfield.getText();
String course = (String) pick_course_combobox.getSelectedItem();

try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    String url = "jdbc:mysql://localhost:3306/sms";
    String us = "root";
    String ps = "";

    try (Connection con = DriverManager.getConnection(url, us, ps)) {
        // Check if subject_id is empty
        if ("".equals(subject_id)) {
            JOptionPane.showMessageDialog(new JFrame(), "Subject ID is empty", "Dialog", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method if subject_id is empty
        }

        // Execute the SELECT statement to fetch subjects
        String sql = "SELECT subject FROM "+course+"_subjects WHERE subject_id = ?";
        try (PreparedStatement pst2 = con.prepareStatement(sql)) {
            pst2.setString(1, subject_id);
            ResultSet rs = pst2.executeQuery();

            // Loop through the ResultSet to retrieve subjects
            while (rs.next()) {
                String subject = rs.getString("subject");
                
                String input = JOptionPane.showInputDialog("Do you want to delete Subject: " + subject + "?: YES/NO");

                if ("YES".equalsIgnoreCase(input)) {
                    // Execute the DELETE statement
                    try (PreparedStatement pst = con.prepareStatement("DELETE FROM "+course+"_subjects WHERE subject_id = ?")) {
                        pst.setString(1, subject_id);
                        int rowsDeleted = pst.executeUpdate();

                        if (rowsDeleted > 0) {
                            JOptionPane.showMessageDialog(new JFrame(), "Subject: " + subject + " was deleted successfully", "Dialog", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            }
            // Call update_subject_table() method after the loop to ensure it's executed only once
            update_subject_table();
        }
    }
} catch (Exception e) {
    System.out.println("Error: " + e.getMessage());
}

        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String subject = (String) subject_combobox.getSelectedItem();
        String day = (String) day_combobox.getSelectedItem();
        String row = (String) schedule_row_combobox.getSelectedItem();
        String time = time_textfield.getText();
        
        
        String course = (String) pick_course_combobox.getSelectedItem();
        
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/sms";
            String us = "root";
            String ps = "";
            
            Connection con = DriverManager.getConnection(url, us, ps);
            PreparedStatement pst = null;
            if ("".equals(time)){
            JOptionPane.showMessageDialog(new JFrame(), "Input Time", "Dialog", JOptionPane.ERROR_MESSAGE);

            } else {
                
                
                   pst = con.prepareStatement("UPDATE "+course+"_schedule SET "+day+"=? WHERE `rows`=?");
                   pst.setString(1, subject + ": "+ time);
                   pst.setString(2, row);

                   pst.executeUpdate();
                
                
                   update_subject_table();  
                
                
            }
            
           } catch(Exception e){
           System.out.println("Error: "+ e.getMessage());
           
                       
           }
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String subject = (String) subject_combobox.getSelectedItem();
        String day = (String) day_combobox.getSelectedItem();
        String row = (String) schedule_row_combobox.getSelectedItem();
        String time = time_textfield.getText();
        
        
        String course = (String) pick_course_combobox.getSelectedItem();
        
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:MySQL://localhost:3306/sms";
            String us = "root";
            String ps = "";
            
            Connection con = DriverManager.getConnection(url, us, ps);
            PreparedStatement pst = null;
            if ("".equals(time)){
            JOptionPane.showMessageDialog(new JFrame(), "Input Time", "Dialog", JOptionPane.ERROR_MESSAGE);

            } else {
                
                
                   pst = con.prepareStatement("UPDATE "+course+"_schedule SET "+day+"=? WHERE `rows`=?");
                   pst.setString(1, "");
                   pst.setString(2, row);

                   pst.executeUpdate();
                
                
                   update_subject_table();  
                
                
            }
            
           } catch(Exception e){
           System.out.println("Error: "+ e.getMessage());
           
           }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teacher_pov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teacher_pov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teacher_pov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teacher_pov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new teacher_pov().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_course;
    private javax.swing.JPanel attendance;
    private javax.swing.JButton attendance_button;
    private javax.swing.JButton courseManagement_button;
    private javax.swing.JTextField course_id_textfield;
    private javax.swing.JButton course_info_button;
    private javax.swing.JPanel course_information;
    private javax.swing.JPanel course_management;
    private javax.swing.JLabel course_name;
    private javax.swing.JTable course_schedule;
    private javax.swing.JTable course_subject_table;
    private javax.swing.JTable course_table;
    private javax.swing.JTextField course_textfield;
    private javax.swing.JComboBox<String> courses_combobox;
    private javax.swing.JComboBox<String> day_combobox;
    private javax.swing.JLabel first_name_label;
    private javax.swing.JPanel grade;
    private javax.swing.JButton grades_button;
    private javax.swing.JPanel home;
    private javax.swing.JButton home_button;
    private javax.swing.JTextField instructor_textfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel last_name_label;
    private javax.swing.JButton message_button;
    private javax.swing.JDesktopPane message_panel;
    private javax.swing.JButton notification_button;
    private javax.swing.JDesktopPane notification_panel;
    private javax.swing.JComboBox<String> pick_course_combobox;
    private javax.swing.JButton remove_course;
    private javax.swing.JComboBox<String> schedule_row_combobox;
    private javax.swing.JButton searchCourse_button;
    private javax.swing.JButton search_student;
    private javax.swing.JButton search_student_information;
    private javax.swing.JTable student_course_table;
    private javax.swing.JTextField student_id_search;
    private javax.swing.JTextField student_id_textfield;
    private javax.swing.JButton student_info_button;
    private javax.swing.JPanel student_information;
    private javax.swing.JComboBox<String> subject_combobox;
    private javax.swing.JTextField subject_id_textfield;
    private javax.swing.JTextField subject_name_textfield;
    private javax.swing.JPanel tab;
    private javax.swing.JTextField time_textfield;
    private javax.swing.JButton update_Course;
    private javax.swing.JButton upload_course;
    private javax.swing.JButton upload_subject_button;
    // End of variables declaration//GEN-END:variables
}
